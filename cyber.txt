젠킨스란?
오픈소스 자동화 서버
다수의 개발자들이 하나의 프로그램을 개발할 때 버전 충돌을 방지하기 위해
각자 작업한 내용을 공유영역에 있는 저장소에 빈번히 업로드함으로써 지속적 통합이 가능하도록 해줌.
*젠킨스는 CI(Continuous Intergration)툴임


젠킨스 war - 단독으로 또는 톰캣 같은 자바 애플리케이션 서버에서 서블릿으로 실행 할 수 있다.
-----------------------------------------------------------------------------------------
컨테이너와 VM은 무엇인가?

container란?
컨테이너는 프로그램이 작동하기 위한 최소한의 요소들을 묶어 패키징한 OS다.
작으면서 독립적인 배포와 실행을 가능하게 하는 일종의 가상머신이다.
시스템을 가상화 하는 것이 아닌 어플리케이션을 구동할 수 있는 환경을 가상화 하여
가볍고 성능이 좋고 더 많은 애플리케이션을 구동할 수 있어 빠른 빌드와 배포가 가능하다.

컨테이너란 -> 애플리케이션을 서로 다른 컴퓨팅 환경으로 이동하더라도 안정적으로 실행하기 위한 고민에서 나온 대안...
개념적으로 애플리케이션과 애플리케이션 실행에 필요한 라이브러리, 바이너리, 구성파일 등을 하나로 묶는 것이다.
컨테이너 개념으로 묶어두면 개발 환경, 테스트 환경, 실 운영 환경으로 옮겨 다녀도 오류가 날 가능성이 줄어드니까...

컨테이너 기술 - 시스템을 가상화 하는 것이 아닌
어플리케이션을 구동할수 있는 환경을 가상화 하는 기술이다.
빠른 빌드와 배포, 이식성을 제공하기 때문에 소프트웨어 상품의 신속한 개발, 민첩성 그리고 확장성이 가능.
개발에서 운영으로의 이관을 손쉽게 할 수 있는 기술로서, 개발자와 운영자들 사이의 의사소통, 협업, 융합을 강조하는
데브옵스 기반의 패러다임을 실현하게 할 수 있는 기반 기술 이기도 하다.

가상머신과 컨테이너의 차이점은?
가상머신을 만들어서 배포를 해도 비슷한 효과가 있겠지만.
가상 머신과는 달리 컨테이너는 게스트 운영체제가 포함되어 있지 않아 작고 빠르게 구성할 수 있다.

----

q.컨테이너 기술을 언급할떄 뺴놓을수 없는것 docker 넌 뭐냐.?
도커는 컨테이너 기술을 급부상시킨 사실상 컨테이너 기술의 주인공인 셈.
리눅스의 운영- 시스템- 레벨 가상화 기술을 기반으로
추상화 및 자동화 레이어를 통해 소프트웨어 컨테이너 내에 애플리케이션 배포를 자동화하는 오픈소스 프로젝트..

최근에는 대용량 컨테이너의 배포, 관리, 클러스터 및 로드 밸런싱을 위해, 오픈 소스기반의
컨테이너 관리 프로그램들의 중요도가 높아져가고 있음.

이러한 컨테이너 기술을 적용한 사례?
구글은 리눅스 컨테이너 기술을 가장 많이 활용, 서비스 하고 있음.
지메일, 구글드라이브 등도 컨테이너로 운영중
-----------------------------------------------------------------------

컨테이너와 VM은 비슷한 목적을 가지고 있다.
애플리케이션과 그 의존성들을 독립된 단위로 묶어서 어디서든 실행 가능하게 하는 것.

VM은 프로그램을 실제 컴퓨터처럼 실행한다.
VM들은 하이퍼 바이저를 통해 물리적 기계위에서 돌아간다.
한편 하이퍼 바이저는 호스트 머신이나 베어메탈위에서 실행된다.

rest란?
-----------------------------------------------------------------------
http 기반으로 필요한 자원에 접근하는 방식을 정해놓은 네트워크 아키텍처
여기서 자원이란, 저장된 데이터(dbms), 이미지,동영상,문서와 같은 파일, 서비스(이메일 전송,푸쉬 메시지 등) 등을 모두 포함한다
좁은의미로 rest란 http를 통해 crud를 실행하는 api를 뜻한다.

restful?
rest의 제약조건이 있는데 이 제약조건을 준수하는 웹서비스를 RESTFul하다고 한다.
1.클라이언트/서버 - 클라이언트와 서버가 각각 역할이 구분되어야 한다.
2.무상태(Stateless) - REST 서버는 작업을 위한 상태정보(쿠기, 세션 등)를 관리 하지 않아야 한다.
3.캐쉬 - 캐쉬를 제공해야 한다.
4.계층화 - 서버를 다중 계층으로 구성 할 수 있어야 한다.
5.인터페이스 일관성 - 아키텍처를 단순화하고 분리해 각 부분을 독립적으로 발전 시킬수 있음

Representational State Transfer
표현적인 상태 전송,전달
예를 들어 책을 표현할때,
책의 이름 : 드래곤볼
책의 페이지수 : 300페이지
이런식으로 표현 할 수 있고 json으로 xml으로도 표현할 수 있다.
-----------------------------------------------------------------------

pojo 방식이란?
먼가 있어보이려고 만들어낸 말이다.
순수 자바? 멤버값(속성), getter/setter 메소드만 갖는 클래스를 말한다.
다른 프레임워크에 종속되지 않은 클래스를 말한다.(이 클래스를 사용하려면 꼭 그 미들웨어가 있어야한다. 이러면
POJO아님)
아무것도 종속되지 않았다고 POJO가 아니다. 객체지향 철학으로 구성되어 있어야 POJO다 (매우 중요)
그냥 순수자바로 만든 객체라고 POJO가 아니다.
-----------------------------------------------------------------------



Saas(Software as a Service)
소프트웨어를 '서비스' 개념으로 제공받고 이에 대한 비용을 지불하는 비즈니스 모델을 의미함.
SaaS 서비스를 구축하기 위한 기술적 요소는 컨피그레이션 기반의 애플리케이션 커스터마이징 ,멀티 테넌시 아키텍처,
확장성을 지원하는 인프라인데 적용단계에 따라 일반적으로 4개의 Level로 구분한다.
