git이란?
git repository란? 말그대로 파일이나 폴더를 저장해 두는 곳.
git은 파일을 변경 이력 별로 구분되어 저장 된다.
git은 원격 저장소와 로컬 저장소 두종류의 저장소를 제공한다.
remote repository - 파일이 원격 저장소 전용 서버에서 관리 되며 여러 사람이 함께 공유하기 위한 저장소
local repository - 내 pc에 파일이 저장되는 개인 전용 저장소


worktree ----------index ------------ 저장소
git의 커밋 작업은 작업트리(worktree)에 있는 변경 내용을 저장소에 바로 저장하는게 아니라
그 사이에 있는 공간인 인덱스에 파일 상태를 기록한다. 그래서 저장소에 변경사항을 기록하기 위해서는
모든 변경사항들이 인덱스에 존재해야 한다.
따라서 저장소에 변경 사항을 기록하기 위해서는, 기록하고자 하는 모든 변경 사항들이 '인덱스'에 존재해야 함
예를 들어, 10개의 파일을 수정했지만 그 중에 7개만 저장소에 공개하고 싶을 때,
변경한 10개의 파일 중 7개를 선택하는 작업이 바로 '인덱스에 등록' 또는 '스테이징(stage)'이라 표현하는 작업이다

push - 내 pc의 로컬 저장소에서 변경된 이력을 원격 저장소에 공유하려면 로컬 저장소의 변경 이력을
원격 저장소(remote repository)에 올려야 함.
웹 상의 원격 저장소로 변경된 파일을 올리는 것을 git에서는 push라고 한다.

clone - 누군가의 변경 이력이 적용된 원격 저장소가 있으면, 그걸 웹에서 통째로 복제해와 내 pc에서 작업할 수 있다.
이거를 clone이라고 한다.
명령어 git bash 에서
git clone https://github.com/goneone/joongang.git
입력하면 해당 디렉토리에 복제됨

pull - 원격 저장소를 공유해서 여러사람이 작업 할 때, 모두가 같은 원격 저장소에 push한다.
이 때 변경 내용을 내 로컬 저장소에도 적용하는 작업을 pull이라고 한다.


--------------------------------------------------------------------
git의 원리
*****git은 파일의 내용을 기반으로 object 파일의 이름을 만든다.
그래서 내용이 같으면? .git에서의 파일 이름(오브젝트)이 같다.
(파일이름이 달라도 내용이 같으면 같은 오브젝트를 가르킴)

그 원리 => sha1 hash
  sha-1 해쉬 알고리즘을 통과하면 같은 단어는 같은 해쉬 값을 가진다.
  git은 sha1의 매커니즘을 활용하기 때문에 어떤 파일에 대해서 git add를 하면
  git은 (대략적으로 다음의 과정을 거친다)
  1.add한 파일의 내용을 봄
  2.해당 내용과 부가적인 결과를 합해서 압축한다.
  3.압축한 내용을 sha1이라는 방법으로 해쉬를 통과시켜서 해쉬값을 얻는다
  4.해당 값을 활용하여 디렉토리명과 파일명(오브젝트명)을 만든다.

commit의 원리
  git commit을 진행하면 commit 결과(버전)는 오브젝트 파일로 저장되고,
  해당 오브젝트에는 상세 commit 파일의 버전과 이름이 링크가 되어 있다.

commit이 가진 주요정보 2가지
  1.이전 커밋이 누구인지(parent)
  2.커밋이 일어난 시점에 작업 디렉토리의 파일의 이름과, 이름이 담고 있는 내용 사이의 정보(tree)

git status 명령어 원리
    workspace의 파일 내용과
    index(stage)의 파일의 내용과
    최신 커밋 오브젝트 사이의 차이를 비교해서
    add, commit할게 있는지 없는지를 확인한다
--------------------------------------------------------------------
