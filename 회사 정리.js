-------------페이징처리-------------
1.동적 페이지네이션 - 페이지 별로 데이터를 나누어 받는 방식 - ex) 네이버 카페 같은건가?
2.정적 페이지네이션 - 전체 데이터를 한 번에 받는 방식.

이번 엑셀 대용량 다운로드는 전체 데이터(최대1만건)를 다 받아와서 그거를 엑셀에 넣는 작업.
엑셀 다운로드 버튼을 눌렀을때 조회버튼의 로직을 타서 전체 데이터를 조회하도록 함.
top API중 엑셀다운로드 공통 API인 Common_ExcelExport(arg0, arg1, arg2)는
arg0 : 테이블 아이디
arg1 : 팝업 여부(팝업에 위치한 테이블만 true, 아니면 false)
arg2 : 조회한 데이터 array
ex) common_ExcelExport('HLACRTM010M_TableView', false, ret.dto.SUB)
ex2)Top에서 JLSMSDM001M (기타기기관리) 1227line


------------해결해야 할것----------
리더기 - LCD배경이미지 하위기기 진행률이 스크롤을 내렸을 때 안보이게 됨.
ex) 40%(00:00:13) 이랬던게 스크롤 내렸다 올리면 40% 이렇게 됨.
원인 - virtual scroll적용으로 스크롤을 내릴때 테이블을 다시 그림.
조치 -
JLMADCM001T47의 381번째 라인 table_option_setting 추가해서
var column_option = {
  "11" : {
    event : {
      onCreated : funtion(index, data, nTd) {

      }
    }
  }
}
onCreated는 스크롤을 내리면 테이블을 다시 그리는데 다시그릴떄 onCreated 타고
그안에 로직수행함. 그래서 테이블 다시 그릴떄 데이터 받아와서 테이블에 그렸는데
테이블의 원래 로우가 아닌 스크롤이 내려간뒤의 로우에 데이터를 그림
이 문제 해결해야함.
--------------------------------------

메소드에서 메소드 호출할 때!
JLSMSDM001M 672번째 줄 참조.
Top.Controller.get("HLSMSDM001MLogic").table_data_binding(1);

ex)
table_option_setting : function {
  Top.Controller.get("HLSMSDM001MLogic").abcdegg();
}
abcdegg : function {}
---------------------------------------
조회 누르고 검색. -> 검색시 옵션 변경후 페이지 바꿈 -> 이전데이터 값이 나와야 하는데 옵션 변경 값이 나옴
해결 방법
JLSMSDM001M 674 Line 참조
조회시에는 searchEquipList 메소드를 타고
searchEquipList : function(event, widget) {
  Top.Controller.get('HLSMSDM001MLogic').table_data_binding(1);
}
페이지 넘길시에는 table_data_binding을 탐.

원인 - 옵션 변경후 페이지를 바꿀떄 table_data_binding에 바로가는데 변수가 다 거기 선언되어있어서
변경한 값을 물고 있음.
조치 - 임시변수를 searchEquipList에 선언함. (조회를 눌렀을떄 값을 물고 있도록)


---------------------------------------

Jquery를 이용해서 table의 column 컨트롤
공통의 setInnerText참조

var table = Top.dom.selectById("HLMADCM001T47_TableView")
var dom = table.getElement('.body-cell.column_'+11);
//$elem = $(dom)[2]
$(dom)[2].attributes["value"] = "5%";
$(dom)[2].textContent = "5%"; <--이게 화면에 뿌려주는거..

인스턴스 초기화
RLACRTM.reset('ILACRTM018M');
---------------------------------------
1개의 Job이 돌기 위해서 세개의 쓰레드가 돌아감.
배치는 10개 -> 쓰레드는 30개.

파일전송 대량 배치
300번 배치
제우스가 내렸다가 올라 갈 떄는 프로퍼티 파일을 읽고 들어감.
unit = 쓰레드 번호
procnt = 내가 돌릴 갯수
ex~path = 로고를 남길 경로

파일관련은 무조건 SLCMCOM002번 호출해서 구분자로 나뉜다.
Trang_GB = 현재 03만 사용함

302번에서 파일전송전에 한번 쏴서 기기 연결을 체크한다. ->그다음 306호출

MLMTCOM001에서 기기설정로그 - 파일 등 보냈을 때 로그를 저장함

Top랑 Po는 Json형식으로 데이터를 주고받음.

STMCMCOM005는 아웃바운드 공통 (소켓 통신하는거.)
*아웃바운드와 인바운드는 어디를 기준으로 두냐에 따라 다름.
예를들어 기기팀입장에서는 FAPC가 기기에 쏘는거니까 아웃바운드.

대용량 테이블에 쌓고 Json향식으로 SO에 보낼떄 blob으로.
인바운드 - 파일처리, 방범 등이 해당됨 (진행률 올라오는 거) ex)리더기 - wave 전송 진행률 표시

출입기기 실시간 모니터링
기기가 인바운드로 데이터 보냄 -> 인바운드 들어옴 v3->STV3CT001 데이터 패킷타입으로 변환.
어떤 이벤트가 수신 됐는지 판단. ->인바운드 받아서 %가 올라감.

토픽은 서버대 서버, 컨테이너 대 컨테이너 (토픽은 제우스가 지원, 일대다 도 가능)
웹소켓은 HTML이 지원. 서버와 화면 - 서버와 클라이언트가 다이렉트로 붙어있는 동안 통신.
정의 등 복잡한게 많아서 토픽은 지양함 but
대량처리 아웃바운드 - 토픽
        인바운드 - 웹소켓  -> 중공업의 이중화 처리 등의 이유 때문에 바뀜.

단위기기, 운영권한, 제어권한은 트리에 데이터를 다 들고 있음.
**************************************************
주말에 공부해야 할것
모델1, 모델2 차이점
지역변수 ? 그거 클로저.
게시판 기능 1개 추가.
-대용량 및 했던 것들 다시 테스트 할 것.
-vi명령어 공부
-유닉스 기본 공부
-vmware로 리눅스설치.
-안수석님이 현재환경을 vmware로 구축해놨음 usb 받아서 공부할것....!
**************************************************
9월
개인프로젝트 - 게시판 만들기
정보처리기사 3가지 집중.
리눅스 공부

--시간남으면 자바스크립트 틈틈히
1.검색하는 칸, 검색 버튼 만들기
2.쿼리 생각하기
3.검색버튼을 눌렀을떄 어느 주소로 갈지.
4.서블릿이란?
5.로그인 세션 공부할것. (로그인 구현.관련해서 )
6.보안.취약점.
7.tmax vpn 백승철한테 신청할 것.

---------------------------------------
로드밸런싱과 세션 클러스터링
로드밸런싱
하나의 인터넷 서비스가 발생하는 트래픽이 많을 때 여러대의 서버가 분산처리하여
서버의 로드율 증가, 부하량, 속도저하등을 고려하여 적절히 분산처리를 해결해 주는 서비스

로드밸런싱 서비스 방식
네트워크 상단의 L4 스위치가 존재하며 서버로 들어오는 패킷을 실서버로 균일하게 트래픽
부하를 분산시킨다.
(ex 실서버 중 정상적으로 작동하지 않는 경우 이를 감지하여 정상적으로 작동하는 서버로 부하를 분산시킨다.
)

클러스터링?
여러대의 서버가 동시에 한가지 업무를 수행하도록 만드는 것.
예를 들어 DB가 한대 있는데 이 한대가 뻗으면 시스템 장애가 난다.
만약 2대를 클러스터링 해 놓고 각각의 역할을 수행하다가 한놈이 뻗으면 나머지 한놈이
그 역할을 대신 수행하도록 하면 위와 같은 문제를 해결하면서 지속적인 서비스를 제공해줄 수 있게 됨.

세션 클러스터링?
was가 2대 이상 설치되어 있을 경우 동일한 세션으로 세션관리 하는 것을 의미한다.
예를 들어 L4 스위치를 통해 2대 이상의 was가 연결되어 있을 경우, 일반적으로는 사용자는 접속했던
was로 L4 스위치가 접속을 유도해주지만 하나의 WAS에서 허용된 동접수를 초과한 접속이
발생할 경우 다른쪽으로의 접속을 유도해주게 된다. 그럴 경우, 기존 WAS의 세션이 아닌
새로이 접속된 WAS로 세션이 이루어지고 그럴 경우 세션에 대한 처리 불일치가 발생한다.
그래서 각 WAS에 대한 세션을 하나의 세션으로 관리하게 함으로써 설사 사용자가 기존에 접속했던 WAS가 아닌
새로운 WAS로 접속하더라도 세션은 하나로 관리되기 때문에 세션에 대한 불일치가 발생하지 않게한다.
보통 세션 클러스터링은 WAS 설정으로 세팅할 수 있다.
